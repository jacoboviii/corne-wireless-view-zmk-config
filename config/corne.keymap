/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    behaviors {
        holdtap: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E             &kp R                    &kp T        &kp Y            &kp U      &kp I            &kp O    &kp P     &kp DEL
&sk LALT   &kp A  &kp S  &kp D             &kp F                    &kp G        &kp H            &kp J      &kp K            &kp L    &kp SEMI  &kp SINGLE_QUOTE
&sk LSHFT  &kp Z  &kp X  &kp C             &kp V                    &kp B        &kp N            &kp M      &kp COMMA        &kp DOT  &kp FSLH  &sl 3
                         &sk LEFT_CONTROL  &holdtap LEFT_GUI ENTER  &lt 1 TAB    &lt 2 BACKSPACE  &kp SPACE  &sk RIGHT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR        &kp PERCENT       &kp CARET          &kp AMPS         &kp ASTRK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp N5            &kp NUMBER_6       &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&trans   &none         &kp TILDE     &kp GRAVE     &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &trans        &trans                &trans                 &trans
                                     &trans        &trans            &trans            &trans             &trans           &kp COLON
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &none  &none  &none      &none      &none            &none             &none       &none         &none         &none              &trans
&trans  &none  &none  &kp UNDER  &kp PLUS   &kp PIPE         &kp LEFT          &kp DOWN    &kp UP_ARROW  &kp RIGHT     &none              &trans
&trans  &none  &none  &kp MINUS  &kp EQUAL  &kp BACKSLASH    &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT    &kp C_VOL_UP  &kp C_VOLUME_DOWN  &trans
                      &kp ESC    &trans     &none            &trans            &trans      &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F1    &kp F2   &kp F3  &kp F4  &kp F5    &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
&trans  &kp F11   &kp F12  &none   &none   &none     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &kp CAPS  &none    &none   &none   &none     &none         &none         &none         &none         &bt BT_CLR    &trans
                           &none   &none   &none     &none         &none         &none
            >;
        };
    };
};
